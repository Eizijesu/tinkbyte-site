---
import { getCollection } from 'astro:content';
import Layout from '../layouts/Layout.astro';
import FormattedDate from '../components/FormattedDate.astro';

// Get all blog posts
let allPosts: any[] = [];
let recentPosts: any[] = [];
let featuredPost: any = null;
let gridPosts: any[] = [];
let allTags: string[] = [];

try {
  allPosts = await getCollection('blog');
  
  // Get the 3 most recent posts
  recentPosts = allPosts
    .filter(post => !post.data.draft)
    .sort((a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime())
    .slice(0, 3);

  // Get featured post (most recent)
  featuredPost = recentPosts[0];

  // Get remaining posts for grid
  gridPosts = recentPosts.slice(1);

  // Get all unique tags from posts
  allTags = [...new Set(allPosts.flatMap(post => post.data.tags || []))].slice(0, 6);
} catch (error) {
  console.log('Content collection not available, using mock data');
}

// Mock data for preview (replace with real data when you have content)
const mockPosts = [
  {
    title: "Building Products That Actually Matter",
    description: "Real insights from the trenches of product development. How constraint-driven innovation creates solutions that work everywhere.",
    date: "January 18, 2024",
    readingTime: "8 min read",
    tags: ["product-insights", "startup-lessons", "global-perspective"],
    image: "https://images.unsplash.com/photo-1460925895917-afdab827c52f?w=800&h=400&fit=crop&crop=edges",
    slug: "building-products-that-matter"
  },
  {
    title: "AI Evolution: Cutting Through the Hype",
    description: "Practical AI education for builders who value substance over buzzwords. What actually works in real-world applications.",
    date: "January 15, 2024", 
    readingTime: "12 min read",
    tags: ["ai-evolution", "tools", "no-hype"],
    image: "https://images.unsplash.com/photo-1677442136019-21780ecad995?w=800&h=400&fit=crop&crop=edges",
    slug: "ai-evolution-cutting-hype"
  },
  {
    title: "Tech Culture: The Human Side of Building",
    description: "Community stories and ethical design discussions. Why culture matters more than code in successful product development.",
    date: "January 12, 2024",
    readingTime: "6 min read", 
    tags: ["tech-culture", "community", "ethics"],
    image: "https://images.unsplash.com/photo-1522071820081-009f0129c71c?w=800&h=400&fit=crop&crop=edges",
    slug: "tech-culture-human-side"
  }
];

// Use mock data if no real posts exist
const displayPosts = recentPosts.length > 0 ? recentPosts : mockPosts;
const displayFeatured = recentPosts.length > 0 ? featuredPost : mockPosts[0];
---

<Layout title="TinkByte | The Tech Publication That Cuts Through the Noise">
  <!-- Hero Section with Magazine-Style Layout -->
  <section class="py-10 sm:py-16 md:py-20 px-4 sm:px-6 theme-transition-all">
    <div class="max-w-7xl mx-auto">
      <div class="grid lg:grid-cols-2 gap-8 lg:gap-16 items-center">
        
        <!-- Hero Content -->
        <div class="relative order-2 lg:order-1">
          <!-- Decorative blobs -->
          <div class="absolute -top-10 -left-10 w-32 h-32 bg-zinc-100 dark:bg-zinc-800/30 rounded-full blur-3xl opacity-50 animate-blob theme-transition-bg"></div>
          
          <div class="relative">
            <!-- TinkByte Badge -->
            <div class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-zinc-100 dark:bg-zinc-800 text-zinc-800 dark:text-zinc-200 border border-zinc-200 dark:border-zinc-700 mb-6">
              <span class="w-2 h-2 bg-green-500 rounded-full mr-2 animate-pulse"></span>
              Tech Publication
            </div>
            
            <h1 class="text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-bold tracking-tight text-zinc-900 dark:text-zinc-100 theme-transition-color hero-text mb-6">
              <span class="block">The tech publication</span>
              <span class="block mt-1">that cuts through</span>
              <span class="block mt-1 relative">
                <span class="relative inline-block">
                  the noise.
                  <span class="absolute -bottom-1 left-0 w-full h-1 bg-zinc-800 dark:bg-zinc-200 transform origin-left theme-transition-bg"></span>
                </span>
              </span>
            </h1>
            
            <p class="text-lg sm:text-xl text-zinc-600 dark:text-zinc-400 leading-relaxed theme-transition-color mb-8 max-w-lg">
              Authentic insights for builders who value substance over hype. Real experiences from the trenches of product development.
            </p>
            
            <div class="flex flex-wrap gap-4">
              <a 
                href="/features" 
                class="group relative inline-flex items-center gap-2 px-6 py-3 bg-zinc-900 dark:bg-zinc-100 text-white dark:text-zinc-900 rounded-md font-medium hover:bg-zinc-800 dark:hover:bg-zinc-200 transition-all duration-300 min-h-[44px]"
              >
                <span>Explore Features</span>
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4 transition-transform duration-300 group-hover:translate-x-1">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M13.5 4.5L21 12m0 0l-7.5 7.5M21 12H3" />
                </svg>
              </a>
              
              <a 
                href="/community" 
                class="group relative inline-flex items-center gap-2 px-6 py-3 border border-zinc-300 dark:border-zinc-700 text-zinc-700 dark:text-zinc-300 rounded-md font-medium hover:bg-zinc-50 dark:hover:bg-zinc-800 transition-all duration-300 min-h-[44px]"
              >
                <span>Join Community</span>
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4 transition-transform duration-300 group-hover:translate-x-1">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M18 18.72a9.094 9.094 0 003.741-.479 3 3 0 00-4.682-2.72m.94 3.198l.001.031c0 .225-.012.447-.037.666A11.944 11.944 0 0112 21c-2.17 0-4.207-.576-5.963-1.584A6.062 6.062 0 016 18.719m12 0a5.971 5.971 0 00-.941-3.197m0 0A5.995 5.995 0 0012 12.75a5.995 5.995 0 00-5.058 2.772m0 0a3 3 0 00-4.681 2.72 8.986 8.986 0 003.74.477m.94-3.197a5.971 5.971 0 00-.94 3.197M15 6.75a3 3 0 11-6 0 3 3 0 016 0zm6 3a2.25 2.25 0 11-4.5 0 2.25 2.25 0 014.5 0zm-13.5 0a2.25 2.25 0 11-4.5 0 2.25 2.25 0 014.5 0z" />
                </svg>
              </a>
            </div>
          </div>
        </div>
        
        <!-- Hero Image -->
        <div class="relative order-1 lg:order-2">
          <div class="aspect-[4/3] rounded-2xl overflow-hidden bg-zinc-100 dark:bg-zinc-800 shadow-2xl">
            <img 
              src="https://images.unsplash.com/photo-1552664730-d307ca884978?w=800&h=600&fit=crop&crop=edges" 
              alt="Builders collaborating on meaningful tech products"
              class="w-full h-full object-cover"
              loading="eager"
            />
          </div>
          
          <!-- Floating Stats Card -->
          <div class="absolute -bottom-6 -left-6 bg-white dark:bg-zinc-900 p-6 rounded-xl shadow-lg border border-zinc-200 dark:border-zinc-800 theme-transition-all">
            <div class="flex items-center gap-4">
              <div class="text-center">
                <div class="text-2xl font-bold text-zinc-900 dark:text-zinc-100">50+</div>
                <div class="text-xs text-zinc-600 dark:text-zinc-400">Builders</div>
              </div>
              <div class="w-px h-8 bg-zinc-200 dark:bg-zinc-700"></div>
              <div class="text-center">
                <div class="text-2xl font-bold text-zinc-900 dark:text-zinc-100">12</div>
                <div class="text-xs text-zinc-600 dark:text-zinc-400">Countries</div>
              </div>
              <div class="w-px h-8 bg-zinc-200 dark:bg-zinc-700"></div>
              <div class="text-center">
                <div class="text-2xl font-bold text-zinc-900 dark:text-zinc-100">0</div>
                <div class="text-xs text-zinc-600 dark:text-zinc-400">Hype</div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Featured Article Section -->
  {displayFeatured && (
    <section class="py-16 px-4 sm:px-6 border-t border-zinc-100 dark:border-zinc-800 theme-transition-all">
      <div class="max-w-7xl mx-auto">
        <div class="flex items-center justify-between mb-12">
          <h2 class="text-2xl sm:text-3xl font-bold text-zinc-900 dark:text-zinc-100">Featured Article</h2>
          <span class="px-3 py-1 bg-zinc-900 dark:bg-zinc-100 text-white dark:text-zinc-900 text-xs font-medium rounded-full">
            Latest
          </span>
        </div>
        
        <article class="group relative bg-white dark:bg-zinc-900 rounded-2xl border border-zinc-200 dark:border-zinc-800 overflow-hidden hover:shadow-xl transition-all duration-500">
          <div class="grid lg:grid-cols-2 gap-0">
            
            <!-- Featured Image -->
            <div class="aspect-[16/10] lg:aspect-auto overflow-hidden">
              <img 
                src={displayFeatured.image || "https://images.unsplash.com/photo-1460925895917-afdab827c52f?w=800&h=500&fit=crop&crop=edges"}
                alt={displayFeatured.title}
                class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-105"
                loading="eager"
              />
            </div>
            
            <!-- Featured Content -->
            <div class="p-8 lg:p-12 flex flex-col justify-center">
              <div class="flex items-center gap-4 text-sm text-zinc-500 dark:text-zinc-400 mb-4">
                <time dateTime={displayFeatured.date || displayFeatured.data?.pubDate}>
                  {displayFeatured.date || (displayFeatured.data?.pubDate && new Date(displayFeatured.data.pubDate).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }))}
                </time>
                <span class="w-1 h-1 bg-zinc-400 rounded-full"></span>
                <span>{displayFeatured.readingTime || "5 min read"}</span>
              </div>
              
              <h3 class="text-2xl lg:text-3xl font-bold text-zinc-900 dark:text-zinc-100 mb-4 group-hover:text-zinc-700 dark:group-hover:text-zinc-300 transition-colors">
                <a href={displayFeatured.slug ? `/blog/${displayFeatured.slug}` : "#"} class="before:absolute before:inset-0">
                  {displayFeatured.title || displayFeatured.data?.title}
                </a>
              </h3>
              
              <p class="text-zinc-600 dark:text-zinc-400 text-lg leading-relaxed mb-6">
                {displayFeatured.description || displayFeatured.data?.description}
              </p>
              
              <div class="flex flex-wrap gap-2">
                {(displayFeatured.tags || displayFeatured.data?.tags || []).slice(0, 3).map((tag: string) => (
                  <span class="px-3 py-1 bg-zinc-100 dark:bg-zinc-800 text-zinc-700 dark:text-zinc-300 text-sm rounded-full">
                    #{tag}
                  </span>
                ))}
              </div>
            </div>
          </div>
        </article>
      </div>
    </section>
  )}

  <!-- Recent Articles Grid -->
  <section class="py-16 px-4 sm:px-6 border-t border-zinc-100 dark:border-zinc-800 theme-transition-all">
    <div class="max-w-7xl mx-auto">
      <div class="flex items-center justify-between mb-12">
        <h2 class="text-2xl sm:text-3xl font-bold text-zinc-900 dark:text-zinc-100">Latest Insights</h2>
        <a 
          href="/blog" 
          class="group text-sm font-medium text-zinc-700 dark:text-zinc-300 hover:text-zinc-900 dark:hover:text-zinc-100 transition-colors"
        >
          <span class="flex items-center gap-1">
            View all articles
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4 transition-transform duration-300 group-hover:translate-x-1">
              <path stroke-linecap="round" stroke-linejoin="round" d="M13.5 4.5L21 12m0 0l-7.5 7.5M21 12H3" />
            </svg>
          </span>
        </a>
      </div>
      
      <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
        {(displayPosts.length > 1 ? displayPosts.slice(1) : mockPosts.slice(1)).map((post: any, index: number) => (
          <article class="group relative bg-white dark:bg-zinc-900 rounded-xl border border-zinc-200 dark:border-zinc-800 overflow-hidden hover:shadow-lg hover:-translate-y-1 transition-all duration-300">
            
            <!-- Article Image -->
            <div class="aspect-[16/10] overflow-hidden">
              <img 
                src={post.image || post.data?.image || `https://images.unsplash.com/photo-${1460925895917 + index}?w=600&h=400&fit=crop&crop=edges`}
                alt={post.title || post.data?.title}
                class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-105"
                loading="lazy"
              />
            </div>
            
            <!-- Article Content -->
            <div class="p-6">
              <div class="flex items-center gap-4 text-xs text-zinc-500 dark:text-zinc-400 mb-3">
                <time dateTime={post.date || post.data?.pubDate}>
                  {post.date || (post.data?.pubDate && new Date(post.data.pubDate).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }))}
                </time>
                <span class="w-1 h-1 bg-zinc-400 rounded-full"></span>
                <span>{post.readingTime || "5 min read"}</span>
              </div>
              
              <h3 class="text-lg font-semibold text-zinc-900 dark:text-zinc-100 mb-2 group-hover:text-zinc-700 dark:group-hover:text-zinc-300 transition-colors">
                <a href={post.slug ? `/blog/${post.slug}` : "#"} class="before:absolute before:inset-0">
                  {post.title || post.data?.title}
                </a>
              </h3>
              
              <p class="text-sm text-zinc-600 dark:text-zinc-400 line-clamp-3 mb-4">
                {post.description || post.data?.description}
              </p>
              
              <div class="flex flex-wrap gap-1">
                {(post.tags || post.data?.tags || []).slice(0, 2).map((tag: string) => (
                  <span class="px-2 py-1 bg-zinc-100 dark:bg-zinc-800 text-zinc-600 dark:text-zinc-400 text-xs rounded">
                    #{tag}
                  </span>
                ))}
              </div>
            </div>
          </article>
        ))}
      </div>
    </div>
  </section>

  <!-- Newsletter Section -->
  <section id="newsletter" class="py-16 px-4 sm:px-6 border-t border-zinc-100 dark:border-zinc-800 theme-transition-all">
    <div class="max-w-4xl mx-auto text-center">
      <div class="bg-zinc-50 dark:bg-zinc-800/50 rounded-2xl p-8 lg:p-12">
        <h2 class="text-2xl lg:text-3xl font-bold text-zinc-900 dark:text-zinc-100 mb-4">
          Join the TinkByte Community
        </h2>
        <p class="text-lg text-zinc-600 dark:text-zinc-400 mb-8 max-w-2xl mx-auto">
          Get authentic insights delivered to your inbox. No hype, just substance. Join builders from around the world who value practical knowledge over buzzwords.
        </p>
        
        <form class="flex flex-col sm:flex-row gap-4 max-w-md mx-auto">
          <input 
            type="email" 
            placeholder="Enter your email address" 
            class="flex-1 px-4 py-3 rounded-lg border border-zinc-300 dark:border-zinc-700 bg-white dark:bg-zinc-900 text-zinc-900 dark:text-zinc-100 placeholder-zinc-500 dark:placeholder-zinc-400 focus:ring-2 focus:ring-zinc-500 focus:border-transparent outline-none"
            required
          />
          <button 
            type="submit"
            class="px-6 py-3 bg-zinc-900 dark:bg-zinc-100 text-white dark:text-zinc-900 rounded-lg font-medium hover:bg-zinc-800 dark:hover:bg-zinc-200 transition-colors"
          >
            Subscribe
          </button>
        </form>
        
        <p class="text-xs text-zinc-500 dark:text-zinc-400 mt-4">
          No spam, unsubscribe anytime. Read our <a href="/privacy" class="underline hover:text-zinc-700 dark:hover:text-zinc-300">privacy policy</a>.
        </p>
      </div>
    </div>
  </section>

  <!-- Topics Section -->
  {allTags.length > 0 && (
    <section class="py-16 px-4 sm:px-6 border-t border-zinc-100 dark:border-zinc-800 theme-transition-all">
      <div class="max-w-7xl mx-auto">
        <h2 class="text-2xl sm:text-3xl font-bold text-zinc-900 dark:text-zinc-100 mb-12 text-center">
          Explore by Topic
        </h2>
        
        <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4">
          {allTags.map((tag: string) => {
            const tagCount = allPosts.filter(post => post.data.tags && post.data.tags.includes(tag)).length;
            return (
              <a 
                href={`/tags/${tag}`}
                class="group p-4 text-center rounded-xl border border-zinc-200 dark:border-zinc-800 hover:bg-zinc-50 dark:hover:bg-zinc-800/70 transition-all duration-300"
              >
                <div class="text-sm font-medium text-zinc-900 dark:text-zinc-100 mb-1">#{tag}</div>
                <div class="text-xs text-zinc-500 dark:text-zinc-400">
                  {tagCount} article{tagCount !== 1 ? 's' : ''}
                </div>
              </a>
            )
          })}
        </div>
      </div>
    </section>
  )}
</Layout>

<style>
  /* Magazine-style animations */
  .animate-blob {
    animation: blob 7s infinite;
  }
  
  @keyframes blob {
    0% { transform: translate(0px, 0px) scale(1); }
    33% { transform: translate(30px, -50px) scale(1.1); }
    66% { transform: translate(-20px, 20px) scale(0.9); }
    100% { transform: translate(0px, 0px) scale(1); }
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .hero-text span {
    opacity: 0;
    transform: translateY(20px);
    animation: slideUp 0.8s ease forwards;
  }
  
  .hero-text span:nth-child(1) { animation-delay: 0.1s; }
  .hero-text span:nth-child(2) { animation-delay: 0.2s; }
  .hero-text span:nth-child(3) { animation-delay: 0.3s; }
  
  @keyframes slideUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Animate elements on scroll
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    };
    
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const target = entry.target as HTMLElement;
          target.style.opacity = '1';
          target.style.transform = 'translateY(0)';
        }
      });
    }, observerOptions);
    
    // Observe all articles
    document.querySelectorAll('article').forEach(article => {
      const htmlArticle = article as HTMLElement;
      htmlArticle.style.opacity = '0';
      htmlArticle.style.transform = 'translateY(20px)';
      htmlArticle.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
      observer.observe(article);
    });
  });
</script>