---
// Background.astro - Dot pattern and ambient glow background with TinkByte brand colors
---

<div class="theme-transition-all fixed inset-0 -z-10 overflow-hidden">
  <!-- Dot pattern background with TinkByte branding -->
  <div
    class="bg-grid-pattern theme-transition-bg absolute inset-0 bg-[center_top_-1px] [mask-image:radial-gradient(white,transparent_85%)]"
  >
  </div>

  <!-- Ambient glow effects with TinkByte brand colors -->
  <div
    class="dark:bg-tinkbyte-primary/15 animate-glow theme-transition-bg absolute left-1/4 top-1/4 h-96 w-96 -translate-x-1/2 -translate-y-1/2 rounded-full bg-zinc-400/20 opacity-50 blur-3xl"
  >
  </div>
  <div
    class="dark:bg-tinkbyte-accent/10 animate-glow animation-delay-1000 theme-transition-bg absolute bottom-1/3 right-1/4 h-64 w-64 translate-x-1/2 translate-y-1/2 rounded-full bg-zinc-300/20 opacity-40 blur-3xl"
  >
  </div>

  <!-- Additional TinkByte brand glow for dark theme -->
  <div
    class="dark:bg-tinkbyte-primary/8 animate-glow animation-delay-2000 theme-transition-bg absolute left-1/2 top-1/2 h-80 w-80 -translate-x-1/2 -translate-y-1/2 rounded-full bg-transparent opacity-30 blur-3xl"
  >
  </div>

  <!-- Theme transition overlay with TinkByte colors -->
  <div
    id="theme-transition-overlay"
    class="dark:bg-tinkbyte-dark pointer-events-none absolute inset-0 bg-white opacity-0"
  >
  </div>
</div>

<script>
  // Enhanced theme transition script
  document.addEventListener('DOMContentLoaded', () => {
    const themeToggle = document.querySelector('[data-theme-toggle]') as HTMLElement | null;
    const overlay = document.getElementById('theme-transition-overlay') as HTMLElement | null;

    if (themeToggle && overlay) {
      themeToggle.addEventListener('click', () => {
        // Add transitioning class to optimize performance
        document.documentElement.classList.add('theme-transitioning');

        // Fade in overlay with TinkByte brand color
        overlay.style.opacity = '0.15';
        overlay.style.transition = 'opacity 0.3s ease';

        setTimeout(() => {
          // Fade out overlay
          overlay.style.opacity = '0';

          // Remove transitioning class after animation completes
          setTimeout(() => {
            document.documentElement.classList.remove('theme-transitioning');
          }, 700);
        }, 300);
      });
    }
  });
</script>

<style>
  /* TinkByte brand color definitions */
  :root {
    --tinkbyte-primary: #243788;
    --tinkbyte-accent: #b4bce1;
    --tinkbyte-dark: #1a2b5c;
  }

  /* Grid pattern for dots with TinkByte branding */
  .bg-grid-pattern {
    background-size: 24px 24px;
    background-image: radial-gradient(circle, rgba(0, 0, 0, 0.15) 1px, transparent 1px);
    transition: background-image 0.7s cubic-bezier(0.65, 0, 0.35, 1);
  }

  /* Dark mode version with TinkByte brand colors */
  :global(.dark) .bg-grid-pattern {
    background-image: radial-gradient(circle, rgba(180, 188, 225, 0.15) 1px, transparent 1px);
  }

  /* TinkByte brand color utilities */
  .bg-tinkbyte-primary\/15 {
    background-color: rgba(36, 55, 136, 0.15);
  }

  .bg-tinkbyte-accent\/10 {
    background-color: rgba(180, 188, 225, 0.1);
  }

  .bg-tinkbyte-primary\/8 {
    background-color: rgba(36, 55, 136, 0.08);
  }

  .bg-tinkbyte-dark {
    background-color: #1a2b5c;
  }

  /* Ambient glow animations with TinkByte colors */
  .animate-glow {
    animation: glow 12s cubic-bezier(0.4, 0, 0.6, 1) infinite;
    transition:
      background-color 0.7s cubic-bezier(0.65, 0, 0.35, 1),
      opacity 0.7s cubic-bezier(0.65, 0, 0.35, 1);
  }

  .animation-delay-1000 {
    animation-delay: 1s;
  }

  .animation-delay-2000 {
    animation-delay: 2s;
  }

  @keyframes glow {
    0%,
    100% {
      opacity: 0.4;
      transform: translate(0, 0) scale(1);
    }
    25% {
      opacity: 0.5;
      transform: translate(5%, 5%) scale(1.1);
    }
    50% {
      opacity: 0.3;
      transform: translate(0, 10%) scale(0.95);
    }
    75% {
      opacity: 0.5;
      transform: translate(-5%, 5%) scale(1.05);
    }
  }

  /* Theme transition overlay with TinkByte branding */
  #theme-transition-overlay {
    transition: opacity 0.3s ease;
    z-index: 10;
  }
</style>
